services:
    nginx:
        image: nginx:stable-alpine
        container_name: nginx-proxy
        restart: unless-stopped
        ports:
            - "443:443"
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./certbot/conf:/etc/letsencrypt:ro
            - ./certbot/www:/var/www/certbot:ro

    certbot:
        image: certbot/certbot:latest
        container_name: certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt:rw
            - ./certbot/www:/var/www/certbot:rw
        command: >
            certonly --webroot -w /var/www/certbot
            --keep-until-expiring
            -m ${EMAIL}
            --agree-tos
            --non-interactive
            -d ${ROOT_DOMAIN}
            -d ${EXEGOL_DOMAIN}
            -d ${WIKI_DOMAIN}
            -d ${NOTES_DOMAIN}
            --expand

    trilium:
        image: triliumnext/notes:latest
        container_name: trilium-sync
        restart: unless-stopped
        volumes:
            - ${TRILIUM_DATA_DIR:-./trilium-data}:/home/node/trilium-data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro

    db:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
        logging:
            driver: none
        restart: unless-stopped
        volumes:
            - db-data:/var/lib/postgresql/data

    wiki:
        image: ghcr.io/requarks/wiki:2
        depends_on:
            - db
        environment:
            DB_TYPE: postgres
            DB_HOST: db
            DB_PORT: 5432
            DB_USER: ${POSTGRES_USER}
            DB_PASS: ${POSTGRES_PASSWORD}
            DB_NAME: ${POSTGRES_DB}
        restart: unless-stopped

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
            - prometheus-data:/prometheus
        ports:
            - "10.10.10.1:9090:9090" 
        restart: unless-stopped

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        depends_on:
            - prometheus
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
        ports:
            - "10.10.10.1:3000:3000" 
        volumes:
            - grafana-data:/var/lib/grafana
        restart: unless-stopped

    node-exporter:
        image: quay.io/prometheus/node-exporter:latest
        container_name: node-exporter
        command:
            - "--path.rootfs=/host"
        pid: host
        restart: unless-stopped
        volumes:
            - "/:/host:ro,rslave"

    nginx-exporter:
        image: nginx/nginx-prometheus-exporter:latest
        container_name: nginx-exporter
        depends_on:
            - nginx
        restart: unless-stopped
        command:
            - "--nginx.scrape-uri=http://nginx-proxy/nginx_status"

volumes:
    db-data:
    prometheus-data:
    grafana-data:
